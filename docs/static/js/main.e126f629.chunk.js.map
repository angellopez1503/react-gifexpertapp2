{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GAClBA,EAAEC,iBACDJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCOVG,EAdH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACPC,EADO,0FAEwEC,UAAUH,GAFlF,sBAGMI,MAAMF,GAHZ,cAGPG,EAHO,gBAIUA,EAAKC,OAJf,uBAILC,EAJK,EAILA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAWNM,GAXM,4CAAH,sDCqBCO,EAlBM,SAACf,GACpB,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACC,GACtBH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGZ,CAAChB,IAEGiB,GCNMK,EAVK,SAAC,GAAmB,EAAlBX,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE3B,OACI,sBAAKqB,UAAU,yCAAf,UACG,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBAc,EApBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEjB,EAA4Be,EAAaf,GAA7Ba,EAAZ,EAAON,KAAYS,EAAnB,EAAmBA,QAEnB,OACE,qCAEE,oBAAIO,UAAU,oCAAd,SAAmDvB,IAEjDgB,GAAW,mBAAGO,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SACGV,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCMjBgB,EApBM,WACnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG2C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCVhB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.e126f629.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n    if(inputValue.trim().length>2){\r\n        setCategories(cats=>[inputValue,...cats])\r\n        setInputValue('')        \r\n    }\r\n\r\n       \r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n"," const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?api_key=ZavZSd6WlvRUcw3zttP2U3vjsA0I39H2&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map((img) => ({\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    }))\r\n    return gifs\r\n  }\r\n\r\n  export default getGifs;","import { useEffect, useState } from 'react'\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    })\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}  />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\n \r\n import GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n  \r\n  const {data:images,loading}=useFetchGifs(category)\r\n \r\n  return (\r\n    <>\r\n    \r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {\r\n        loading && <p className=\"animate__animated animate__flash\" >Loading</p>\r\n     }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map(category => (\r\n           <GifGrid\r\n           key={category}\r\n           category={category} />\r\n           )\r\n        )}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}